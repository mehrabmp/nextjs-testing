import Head from 'next/head';
import Link from 'next/link';
import { useRouter } from 'next/router';
import z from 'zod';
import type { SubmitHandler } from 'react-hook-form';
import { useForm } from 'react-hook-form';
import { zodResolver } from '@hookform/resolvers/zod';
import { Button, Input } from '@/components/ui';
import { signIn } from 'next-auth/react';

export const signupSchema = z.object({
  name: z.string().nonempty('Please enter your name'),
  email: z
    .string()
    .nonempty('Please enter email address')
    .email('Please enter valid email address'),
  password: z
    .string()
    .nonempty('Please enter password')
    .min(6, `Password must be at least 6 characters long`)
    .max(50, `Password can't be more than 50 characters long`),
});

type SignupSchemaType = z.infer<typeof signupSchema>;

export default function Signup() {
  const router = useRouter();
  const {
    register,
    handleSubmit,
    formState: { errors },
  } = useForm<SignupSchemaType>({
    resolver: zodResolver(signupSchema),
  });

  const onSubmit: SubmitHandler<SignupSchemaType> = async values => {
    const status = await signIn('sign-up', {
      callbackUrl: '/dashboard',
      redirect: false,
      name: values.name,
      email: values.email,
      password: values.password,
    });

    if (status?.ok) router.push('/dashboard');
  };

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="flex min-h-screen flex-col items-center justify-center p-5">
        <div className="mb-10 flex flex-col items-center justify-center space-y-1">
          <h1 className="text-4xl font-medium">Sign up</h1>
        </div>
        <form
          className="w-full max-w-xs space-y-4"
          onSubmit={handleSubmit(onSubmit)}
        >
          <div className="space-y-1">
            <label htmlFor="name" className="text-sm font-medium">
              Name
            </label>
            <Input
              id="name"
              placeholder="Enter your name"
              error={errors.name && errors.name.message}
              {...register('name')}
            />
          </div>
          <div className="space-y-1">
            <label htmlFor="email" className="text-sm font-medium">
              Email
            </label>
            <Input
              id="email"
              placeholder="Enter your email"
              error={errors.email && errors.email.message}
              {...register('email')}
            />
          </div>
          <div className="space-y-1">
            <label htmlFor="password" className="text-sm font-medium">
              Password
            </label>
            <Input
              id="password"
              placeholder="Enter your password"
              error={errors.password && errors.password.message}
              {...register('password')}
            />
          </div>
          <Button type="submit">Sign up</Button>
          <h3 className="text-center text-sm font-medium">
            You have already an account?{' '}
            <Link href={'/signin'} className="text-blue-500">
              Sign in
            </Link>
          </h3>
        </form>
      </div>
    </>
  );
}
